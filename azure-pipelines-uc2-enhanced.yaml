# azure-pipelines-enhanced-complete.yml
trigger:
  branches:
    include:
      - main
      - develop
  paths:
    include:
      - 'specs/**'
      - 'docs-gen/**'

pool:
  vmImage: 'ubuntu-latest'

variables:
  - name: AZURE_OPENAI_API_VERSION
    value: '2024-10-21'
  - name: pythonVersion
    value: '3.10'


stages:
  - stage: GenerateComprehensiveDocs
    displayName: 'Generate Comprehensive Documentation'
    jobs:
      - job: GenerateDocs
        displayName: 'Generate All Documentation Sections'
        steps:
          - checkout: self
          
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '$(pythonVersion)'
              displayName: 'Setup Python $(pythonVersion)'
          
          - script: |
              pip install openai pyyaml markdown openapi-spec-validator
              python -m pip install --upgrade pip
              pip install -r 0DEV/api-spec-gen-func/requirements.txt
            displayName: 'Install Dependencies'

          # Copy the enhanced generator script
          - script: |
              # Create the enhanced documentation generator
              cat > 0DEV/docs-gen/comprehensive_docs_generator.py << 'SCRIPT_EOF'
              # [Insert the complete Comprehensive_Docs_Generator class from above]
              SCRIPT_EOF
            displayName: 'Create Enhanced Generator'
          
          # Run the comprehensive documentation generator
          - script: |
              python -c "
              from 0DEV/docs-gen/comprehensive_docs_generator import comprehensive_docs_generator
              import sys
              
              generator = comprehensive_docs_generator()
              generator.generate_complete_documentation(
                  'specs/eam-api.yaml',
                  '$(Build.ArtifactStagingDirectory)/eam-api-documentation.md',
                  '$(Build.ArtifactStagingDirectory)/eam-api-documentation.html'
              )
              "
            displayName: 'Generate Comprehensive Documentation'
            env:
              AZURE_OPENAI_API_KEY: $(AZURE_OPENAI_API_KEY)
              AZURE_OPENAI_ENDPOINT: $(AZURE_OPENAI_ENDPOINT)
              AZURE_OPENAI_DEPLOYMENT: $(AZURE_OPENAI_DEPLOYMENT)
          
          # Generate a summary report
          - script: |
              python -c "
              import os
              import json
              from datetime import datetime
              
              summary = {
                  'build_number': '$(Build.BuildNumber)',
                  'build_date': datetime.now().isoformat(),
                  'branch': '$(Build.SourceBranchName)',
                  'commit': '$(Build.SourceVersion)',
                  'documentation_sections': [
                      'Overview and Authentication',
                      'API Endpoints',
                      'Data Schemas with IT Security Details',
                      'IT Security Guidelines',
                      'Abbreviations and Acronyms',
                      'References and Citations',
                      'Code Examples'
                  ],
                  'security_standards_referenced': [
                      'ISO/IEC 27001:2022',
                      'NIST Cybersecurity Framework 2.0',
                      'GDPR',
                      'SOC 2',
                      'OWASP Top 10 API Security',
                      'CIS Controls v8.0',
                      'COBIT 2019'
                  ],
                  'files_generated': [
                      'api-documentation.md',
                      'api-documentation.html'
                  ]
              }
              
              with open('$(Build.ArtifactStagingDirectory)/documentation-summary.json', 'w') as f:
                  json.dump(summary, f, indent=2)
              
              print('ðŸ“Š Documentation Summary:')
              print(json.dumps(summary, indent=2))
              "
            displayName: 'Create Documentation Summary'
          
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'comprehensive-api-documentation'